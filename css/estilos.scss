//Change size to set RELATIVE appearence
//It doesnt affect position, just it's appearence. You'd want to modify js/data.js to correct positioning
$hex_size: max(5vw,5vh);


$cell_color: rgb(20, 117, 182);
$cell_border_color: rgb(255, 242, 169);
$cell_hover_color: rgb(11, 98, 156);
$piece_white_color: white;
$piece_black_color: black;
$piece_hover_color: rgb(128, 128, 128);
$invalid_cell_placing_color: rgb(158, 6, 6);
$main_background_color: rgb(253, 249, 213);
$player_aside_color: rgb(238, 200, 97);

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

#main h1 {
    font-size: 3em;
    position: fixed;
    top: 3rem;
    width: 100vw;
    text-align: center;
    text-decoration: underline;
}

aside h2 {
    text-align: center;
    margin-top: 3rem;
}

#board {
    width: 100vw;
    height: 100vh;
    background-color: $main_background_color;
    overflow: auto;
}

#player1,
#player2 {
    background-color: $player_aside_color;
    height: 100vh;
    width: 15vw;
    position: fixed;
    top: 0;
    z-index: 0;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
}

#player1 {
    left: 0;
    border-right: 10px double rgb(77, 6, 6);
}

#player2 {
    right: 0;
    border-left: 10px double rgb(77, 6, 6);
}

.hex-clip {
    width: $hex_size;
    height: $hex_size;
    background-color: $cell_color;
    position: fixed;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    cursor: pointer;

    &:hover {
        background-color: $cell_hover_color;
        transition: 1s;
    }
}

#board>*,
.pieces_board>* {
    -webkit-clip-path: polygon(50% 0, 95% 25%, 95% 75%, 50% 100%, 5% 75%, 5% 25%);
    clip-path: polygon(50% 0, 95% 25%, 95% 75%, 50% 100%, 5% 75%, 5% 25%);
}

.pieces_board {
    margin: 0;
    padding: 0;
    overflow: auto;
    flex-grow: 2;
}

.piece {
    width: $hex_size;
    height: $hex_size;
    position: fixed;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    cursor: pointer;

    //box-shadow: inset 0 0 $hex_size/4 ($hex_size*0.15) rgb(121, 190, 255);
    &:hover {
        transition: 1s;
        background-color: $piece_hover_color;
    }
}

.cover_div {
    width: $hex_size !important;
    height: $hex_size !important;
    position: absolute;

    &::before {
        content: ' ';
    }
}

.disabled_piece {
    background-color: rgba(105, 105, 105, 0.562);
}

.black_player_piece {
    color: $piece_white_color;
    background-color: $piece_black_color;

    &:hover {
        color: $piece_black_color;
    }
}

.white_player_piece {
    color: $piece_black_color;
    background-color: $piece_white_color;

    &:hover {
        color: $piece_white_color;
    }
}

.invalidPiecePlacement {
    animation: redHighlight 1s;
}

@keyframes redHighlight {
    0% {
        background-color: $cell_color;
    }

    50% {
        background-color: $invalid_cell_placing_color;
    }

    100% {
        background-color: $cell_color;
    }
}

#controls {
    width: 100vw;
    height: calc($hex_size + 50px);
    padding: 25px 0;
    border-top: 5px solid rgb(245, 216, 135);
    position: fixed;
    bottom: 0;
    display: flex;
    justify-content: center;
    background-color: $main_background_color;
}

.ui_operation_buttons {
    width: $hex_size;
    height: $hex_size;
    background-color: rgb(204, 204, 204);
    border: 2px solid dimgray;
    border-radius: 8px;
    box-shadow: 0 0 2px black;
    text-align: center;
    display: flex;
    justify-content: space-around;
    flex-direction: column;
    cursor: pointer;
}

#skip_button {
    position: absolute;
}

#gray_overlay {
    background-color: rgba(105, 105, 105, 0.473);
    width: 100vw;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
}

.notification_modal {
    position: fixed;
    border: 2px solid $cell_border_color;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    background-color: rgb(247, 245, 228);

    & div,
    header {
        display: flex;
        justify-content: center;
        text-align: center;
    }
}

.notification_victory {
    width: 50vw;
    height: 30vh;
    left: calc(50vw - 25vw);
    top: calc(50vh - 30vh);
}

.notification_instructions{
    width: 80vw;
    height: 80vh;
    left: calc(50vw - 40vw);
    top: calc(50vh - 40vh);
}

.notification_instructions *{
    flex-grow: 100;
}

.notification_instructions #notification_footer{
    flex-grow: 1;
}

#notifications #notification_header {
    padding: 0.5em;
    font-size: 2em;
}

#notifications .notification_header_victory {
    color: green;
    font-weight: bold;
}


#notification_footer {
    padding: 1em;
    text-align: center;
}

#notification_footer button {
    padding: 1em;
    border: 0;
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.575);
    border-radius: 8px;
}

#notification_close_button {
    position: absolute;
    right: -1em;
    top: -1em;
    color: red;
    background-color: rgb(247, 245, 228);
    border: 1px solid red;
    border-radius: 50%;
    padding: 1em;
    cursor: pointer;
}


@media only screen and (max-width: 768px) {

    aside h2 {
        margin-top: 1rem;
    }

    #player1,
    #player2 {
        height: 15vh;
        width: 100vw;
        left: 0;
    }

    #player2 {
        top: 85vh;
        border-top: 10px double rgb(77, 6, 6);
        border-left: 0;
    }

    #player1 {
        top: 0;
        border-right: 0;
        border-bottom: 10px double rgb(77, 6, 6);
        background-color: dimgray;
    }

    .rotated_player1{
        top: 85vh !important;
        border-top: 10px double rgb(77, 6, 6)  !important;
        background-color: $player_aside_color !important;
        border-bottom: 0 !important;
    }

    .rotated_player2{
        top: 0  !important;
        border-bottom: 10px double rgb(77, 6, 6)  !important;
        border-top: 0 !important;
        background-color: dimgray !important;
    }

    #controls {
        height: calc($hex_size + 50px);
        border-bottom: 5px solid rgb(245, 216, 135);
        position: fixed;
        top: 15vh;
    }

    .notification_victory, .notification_instructions{
        width: 90vw;
        height: 90vh;
        left: calc(50vw - 45vw);
        top: calc(50vh - 45vh);
    }
}